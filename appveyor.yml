environment:

  global:
    PYTHON: "C:\\conda"
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\ci-helpers\\appveyor\\windows_sdk.cmd"
    PYTHON_ARCH: "64" # needs to be set for CMD_IN_ENV to succeed. If a mix
                      # of 32 bit and 64 bit builds are needed, move this
                      # to the matrix section.

  matrix:
    - PYTHON_VERSION: "2.7"
    - PYTHON_VERSION: "3.4"
    - PYTHON_VERSION: "3.5"

platform:
  -x64

install:
  - if "%PYTHON_VERSION%" == "3.4" set "BASE_PYTHON_VERSION=3"
  - if "%PYTHON_VERSION%" == "3.5" set "BASE_PYTHON_VERSION=35"
  - if "%PYTHON_ARCH%" == "64" set "ARCH_LABEL=-x64"
  # These are already installed on appveyor.  Update them.
  - set "CONDA_ROOT=C:\Miniconda%BASE_PYTHON_VERSION%%ARCH_LABEL%"
  # we can't "activate root" with sufficiently-old conda which appveyor has (?)
  # - "%CONDA_ROOT%\\Scripts\\activate root"
  - set "PATH=%CONDA_ROOT%;%CONDA_ROOT%\Scripts;%CONDA_ROOT%\Library\bin;%PATH%"
  - set PATH
  - echo CONDA_PREFIX %CONDA_PREFIX%
  - conda config --set always_yes yes
  # upgrade to latest conda
  - conda update -n root -q conda
  # activate with newer conda, may set different variables
  - "%CONDA_ROOT%\\Scripts\\activate root"
  - echo CONDA_PREFIX %CONDA_PREFIX%
  - conda info -a
  - conda create -q -n test-environment python=%PYTHON_VERSION% pip pycrypto bcrypt ipython-notebook bokeh ruamel_yaml anaconda-client requests beautifulsoup4 tornado coverage pytest pytest-cov

# Not a .NET project, we build in the install step instead
build: false

test_script:
  - echo CONDA_PREFIX %CONDA_PREFIX%
  - "%CONDA_ROOT%\\Scripts\\activate test-environment"
  - echo CONDA_PREFIX %CONDA_PREFIX%
  - echo PATH %PATH%
  - pip install pep257 yapf==0.6.2 pytest-xdist flake8==2.6.2
  - conda install -y -q -c conda-forge keyring
  - conda list
  - conda info -a
  - python -c "import sys; print(sys.version)"
  - python -c "import sys; print(sys.executable)"
  - python -c "import sys; print(sys.prefix)"
  - python --version
  - python setup.py test
